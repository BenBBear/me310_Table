var naive_server = {
    start: function() {}
};

var express = require('express'),
    bodyParser = require('body-parser'),
    formidable = require('formidable'),
    path = require('path'),
    http = require('http'),
    serveIndex = require(__dirname + '/../serve-index'),
    serveStatic = require('serve-static');



var os = require('os');
var wirelessName = ['en1', 'en4', 'wlan0', 'en0'];
var getWifiIp = function() {
    var ifaces = os.networkInterfaces(),
        ip = undefined;
    wirelessName.forEach(function(name) {
        var wl = ifaces[name];
        if (wl) {
            wl.forEach(function(val) {
                if (val.family == 'IPv4') {
                    ip = ip || val.address;
                }
            });
        }
    });
    return ip;
};


var createSharingServer = function(option) {
    /**
     Configuration to use
     ==============================
     option.path
     option.port
     */
    if (!option.path) {
        return naive_server;
    }
    var PORT = option.port || 3000;
    var PATH = option.path;
    var IP = getWifiIp();


    var express_app = express();
    var app = express_app;

    function setUpStatic(url, filePath) {
        express_app.use(url, serveIndex(path.resolve(filePath),{'icons': true}));
        express_app.use(url, serveStatic(path.resolve(filePath)));
    }

    setUpStatic('/public', './src');
    setUpStatic('/storage', PATH);

    express_app.use(bodyParser.json());



    var getForm = function() {
        var form = new formidable.IncomingForm();
        form.uploadDir = PATH;
        return form;
    };


    var server = http.Server(express_app);

    app.post('/upload', function(res, req) {
        getForm().parse(req, function(err, fields, files) {
            if (err) {
                res.json({
                    error: err
                });
            } else {
                res.json({});
            }
        });
    });


    // TODO
    return {
        start: function() {
            server.listen(PORT, function() {
                var host = this.address().address;
                var port = this.address().port;
                console.log('Table Internal Server has been started at http://' + host + ":" + port);
            });
        },
        get upload_addr() {
            return 'http://' + IP + ':' + PORT + '/public/html/upload.html';
        }
    };
};



module.exports = createSharingServer;
